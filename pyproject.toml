[build-system]
requires = ["setuptools>=80.9.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ecommerce-backend-api"
version = "1.0.0"
description = "A complete backend API for an e-commerce platform, built for the ALX ProDev program."
requires-python = ">=3.13"
authors = [
  {name = "Festus Aboagye", email = "festus233@gmail.com.com"},
]
readme = "README.md"
dependencies = [
    # Core Django dependencies
    "Django==5.2.6",
    "asgiref==3.9.1",
    "sqlparse==0.5.3",

    # Database
    "psycopg2-binary==2.9.10",
    "django-environ==0.12.0",
    "dj-database-url>=3.0.1",

    # API Framework
    "djangorestframework==3.16.1",
    "django-filter==25.1.0",
    "drf-spectacular==0.28.0",
    "django-cors-headers==4.8.0",
    "djangorestframework-simplejwt>=5.5.1",
    "uritemplate==4.2.0",

    # Redis & Cache
    "redis==6.4.0",
    "django-redis==6.0.0",
    "hiredis==3.2.1",

    # GraphQL
    "graphene==3.4.3",
    "graphene-django==3.2.3",
    "graphql-core==3.2.6",
    "graphql-relay==3.2.0",
    "promise==2.3",

    # Background Tasks
    "celery>=5.5.3",
    "django-celery-beat>=2.8.1",
    "django-celery-results>=2.6.0",

    # Utilities
    "Pillow>=11.3.0",
    "requests>=2.32.5",
    "python-dateutil==2.9.0.post0",
    "six==1.17.0",

    # Logging & Monitoring
    "structlog==25.4.0",
    "python-json-logger==3.3.0",
    "sentry-sdk[django]>=2.37.1",

    # Security
    "django-csp>=4.0",
    "django-ratelimit>=4.1.0",
    "PyJWT==2.10.1",

    # Production
    "whitenoise>=6.10.0",
    "gunicorn>=23.0.0",

    # Additional dependencies
    "attrs==25.3.0",
    "inflection==0.5.1",
    "jsonschema==4.25.1",
    "jsonschema-specifications==2025.9.1",
    "PyYAML==6.0.2",
    "referencing==0.36.2",
    "rpds-py==0.27.1",
    "text-unidecode==1.3",
    "typing_extensions==4.15.0",
    "tzdata==2025.2",
]

[project.optional-dependencies]
dev = [
    "django-debug-toolbar>=6.0.0",
    "django-extensions>=4.1.0",
    "django-silk>=5.4.3",
    "ipython>=9.5.0",
    "pytest>=8.4.2",
    "pytest-django>=4.11.1",
    "pytest-cov>=7.0.0",
    "factory-boy>=3.3.3",
    "faker>=37.6.0",
    "ruff>=0.12.12",
    "mypy>=1.17.1",
    "pre-commit>=4.3.0",
    "bandit>=1.8.6",
    "black>=25.1.0",
    "isort>=6.0.1",
    "safety>=3.6.1",
    "django-stubs>=5.2.2",
    "djangorestframework-stubs>=3.16.2",
    "types-requests>=2.32.4.20250913",
    "types-redis>=4.6.0",
    "Sphinx>=8.2.3",
    "sphinx-rtd-theme>=3.0.2",
    "coverage>=7.10.6",
]

docs = [
    "Sphinx>=8.2.3",
    "sphinx-rtd-theme>=3.0.2",
    "docutils>=0.21.2",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["ecommerce_backend*", "apps*"]
exclude = ["tests*", "docs*", "scripts*", "venv*", ".github*", "requirements*"]

[tool.ruff]
target-version = "py313"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "DJ", # flake8-django
    "UP", # pyupgrade
    "S",  # flake8-bandit
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"settings/*.py" = ["F405", "F403"]
"*/migrations/*.py" = ["E501"]
"tests/*.py" = ["S101", "S106"]

[tool.ruff.lint.isort]
known-first-party = ["ecommerce_backend", "core"]
known-third-party = ["django", "rest_framework", "celery", "redis"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.black]
line-length = 88
target-version = ["py313"]

[tool.mypy]
python_version = "3.13"
check_untyped_defs = false
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
strict_optional = true

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "ecommerce_backend.settings.test"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--cov=.",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "--reuse-db",
    "--nomigrations",
]
testpaths = ["tests"]

[tool.coverage.run]
source = ["."]
omit = [
    "*/migrations/*",
    "*/venv/*",
    "*/env/*",
    "manage.py",
    "*/settings/*",
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[project.urls]
Repository = "https://github.com/thecollekta/alx-ecommerce-api.git"
